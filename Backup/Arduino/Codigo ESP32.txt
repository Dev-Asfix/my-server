#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = "Redmiv2";        // Reemplaza con el nombre de tu red Wi-Fi
const char* password = "123456789"; // Reemplaza con la contrase√±a de tu red Wi-Fi
const char* serverName = "http://192.168.18.22:3000/notify"; // Reemplaza con tu IP local y puerto

int DISTANCIA = 0;
int pinLed = 2;
int pinEco = 12;
int pinGatillo = 13;
bool lastState = false;

long readUltrasonicDistance(int triggerPin, int echoPin) {
  pinMode(triggerPin, OUTPUT);
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}

void setup() {
  Serial.begin(115200);
  pinMode(pinLed, OUTPUT);
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  DISTANCIA = 0.01723 * readUltrasonicDistance(pinGatillo, pinEco);
  Serial.println(DISTANCIA);

  bool currentState = DISTANCIA < 20;
  if (currentState != lastState) {
    lastState = currentState;
    sendNotification(currentState);
  }
  
  digitalWrite(pinLed, currentState);
  delay(1000);
}

void sendNotification(bool isFull) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverName);
    http.addHeader("Content-Type", "application/json");
    
    String payload = "{\"status\":\"" + String(isFull ? "full" : "empty") + "\"}";
    int httpResponseCode = http.POST(payload);
    
    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println(response);
    } else {
      Serial.println("Error on sending POST");
    }
    http.end();
  } else {
    Serial.println("Error in WiFi connection");
  }
}
